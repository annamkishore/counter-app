#---------------------------------------------------------
#               Counter App - a web based counter
#---------------------------------------------------------

What is this:
  Counting App - MSA based (Micro Service Arch)

Technologies:
  Backend:
    - Go Lang
    - NodeJS
  Frontend:
    - NextJS
    - ReactJS
    - Antd
  Database:
    - Mongo
  Container:
    - Microk8s

Project Components (Planned):
  Frontend:
    counter-web        ReactJS: NextJS, Antd
  Backend:
    counter-service    NodeJS: increment by 1, decrement by 1, current
    accumulate-service GoLang: add by m, subtract by n
    auth-service       NodeJS: multiple auth options
    api-list-: |
      reset counter
      dice numbered
      dice colored
  Database:
    mongo
  misc config:
    - ingres
    - observability
  Deployment:
    Kubernetes

Project Components (Current):
  - Counter Service
  - Counter Web

Installations:
  - microk8s
  - mongodb
  - golang
  - nodejs

one time setup:
  TBD

Setup:
  1. microk8s start:
  2. microk8s dashboard-proxy: |
    use ip/token to login
    example: https://127.0.0.1:10443
  3. deploy:
    backend: TBD
    frontend: | #run build-deploy.sh
      docker> build docker image
      docker> push image to local registry (microk8s - private image registry)
      kubectl> apply deployment yaml
      kubectl> expose deployment
    database: |
      get the db from services -> mongodb-deployment -> Cluster IP & port
      10.152.183.49:27017
  4. access site url:
    goto dashboard-proxy -> services -> http://10.152.183.219:4000
    (i.e. Cluster IP of counter-web-deployment, port from deployment yaml file)
  5. microk8s stop:
  6. done:

CI/CD:
  TBD
